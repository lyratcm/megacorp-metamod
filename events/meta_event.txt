namespace = meta
@meta_base_max_modifier = 0.85

country_event = {
	id = meta.1
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		not = {
			has_global_flag = host_set_lyra
		}
		has_country_flag = is_lyra
		#temp disabled
		always = no
	}

	immediate = {
		set_country_flag = is_host
		save_global_event_target_as = host_set_lyra
		set_global_flag = host_set_lyra
		every_playable_country = {
			country_event = { id = esc_events.5000 days = 0 }
		}
	}
}

#delay by 1 day to allow a 29 day modifier that is around at start of mont but not for the event
country_event = {
	id = meta.3
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = meta.31 days = 2 }
	}
}

country_event = {
	id = meta.31
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		# size from pop limit
		export_modifier_to_variable = { modifier = empire_size_pops_mult variable = meta_empire_size_pops_mult_var }
		change_variable = {
			which = meta_empire_size_pops_mult_var
			value = @meta_base_max_modifier
		}
		if = {
			limit = {
				check_variable = { which = meta_empire_size_pops_mult_var value < 0 }
			}
			add_modifier = { modifier = meta_empire_size_pops_mult mult = meta_empire_size_pops_mult_var days = 29 }
		}
		# starbase upkeep limit
		export_modifier_to_variable = { modifier = starbases_upkeep_mult variable = meta_starbases_upkeep_mult_var }
		change_variable = {
			which = meta_starbases_upkeep_mult_var
			value = @meta_base_max_modifier
		}
		if = {
			limit = {
				check_variable = { which = meta_starbases_upkeep_mult_var value < 0 }
			}
			add_modifier = { modifier = meta_starbases_upkeep_mult mult = meta_starbases_upkeep_mult_var days = 29 }
		}
		export_modifier_to_variable = { modifier = country_megastructure_build_cap_add variable = meta_mega_build_cap }
		# incase a mod adds this modifier
		if = {
			limit = {
				check_modifier_value = { modifier = country_megastructure_build_cap_mult value > 0 }
			}
			multiply_variable = { which = meta_mega_build_cap value = modifier:country_megastructure_build_cap_mult }
		}
		every_owned_megastructure = {
			limit = {
				is_upgrading = yes
			}
			owner = {
				change_variable = { which = meta_mega_build_cap value = -1 }
			}
		}
		remove_modifier = meta_megastructure_cap
		add_modifier = {
			modifier = meta_megastructure_cap
			mult = meta_mega_build_cap
		}
	}
}

country_event = {
	id = meta.6
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		years_passed > 1
		has_origin = origin_spectrals_cluster
		not = {
			has_country_flag = ehof_precursor_spawned
		}
	}

	immediate = {
		save_event_target_as = rl_digsite_finder
		if = {
			limit = {
				any_planet_within_border = {
					is_planet_class = pc_broken
				}
			}
			random_planet_within_border = {
				limit = {
					is_planet_class = pc_broken
				}
				ehof_giga_new_create_rl_digsite = {
					digsite = ehof_precursor
					digsite_flag = ehof_precursor
					digsite_completion_flag = ehof_chain_begins_complete
				}
				root = {
					set_country_flag = ehof_precursor_spawned
					if = {
						limit = {
							is_ai = yes
						}
						random_country = {
							limit = {
								is_country_type = global_event
							}
							change_variable = {
								which = chk_precursor_cap
								value = 1
							}
						}
					}
				}
			}
		}
	}
}